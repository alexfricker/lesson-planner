kind: Deployment
apiVersion: apps/v1
metadata:
  name: lesson-planner
  namespace: lesson-planner
  labels:
    app: lesson-planner
    app.kubernetes.io/part-of: lesson-planner
    service: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lesson-planner
      service: web
  template:
    metadata:
      labels:
        app: lesson-planner
        service: web
    spec:
      restartPolicy: Always
      serviceAccountName: webservice
      imagePullSecrets:
        - name: gitlab-pull
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: lesson-planner
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: nginx
              mountPath: /var/lib/nginx
            - name: logs
              mountPath: /var/log/nginx
          terminationMessagePolicy: File
          envFrom:
            - secretRef:
                name: lesson-db-secret
            - secretRef:
                name: django-admin-user
          image: 'gitlab.alexfricker.com:5050/internal-apps/lesson-planner:latest'
      serviceAccount: webservice
      volumes:
        - name: nginx
          emptyDir: {}
        - name: logs
          emptyDir: {}
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: lesson-planner-web
  namespace: lesson-planner
spec:
  ipFamilies:
    - IPv4
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  internalTrafficPolicy: Cluster
  type: ClusterIP
  selector:
    app: lesson-planner
    service: web